package interval;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;
import util.Pair;

import java.util.*;
import java.util.regex.Pattern;

/**
 *Statement
 *
 * You’re given a list containing the schedules of multiple employees. Each person’s schedule is a list of non-overlapping intervals in sorted order. An interval is specified with the start and end time, both being positive integers. Your task is to find the list of finite intervals representing the free time for all the employees.
 *
 *     Note: The common free intervals are calculated between the earliest start time and the latest end time of all meetings across all employees.
 *
 * Constraints:
 *
 *     1≤1≤ schedule.length , schedule[i].length ≤50≤50
 *
 *     0≤0≤ interval.start < interval.end ≤108≤108, where interval is any interval in the list of schedules.
 */
public class EmployeeFreeTime {
    private static class Interval{
        int start;
        int end;
        boolean closed;
        public Interval(int start, int end)
        {
            this.start = start;
            this.end = end;
            this.closed = true; // by default, the interval is closed
        }

        // set the flag for closed/open
        public void setClosed(boolean closed)
        {
            this.closed = closed;
        }

        @Override
        public boolean equals(Object o) {
            if (this == o) return true;
            if (o == null || getClass() != o.getClass()) return false;
            Interval interval = (Interval) o;
            return start == interval.start && end == interval.end && closed == interval.closed;
        }

        @Override
        public int hashCode() {
            return Objects.hash(start, end, closed);
        }

        @Override
        public String toString() {
            return "[" + start +
                    ", " + end +
                    ']';
        }
    }
    public static List<Interval> employeeFreeTime(List<List<Interval>> schedule) {
        List<Interval> ans = new ArrayList<>();
        PriorityQueue<Pair<Interval, Pair<Integer, Integer>>> minHeap = new PriorityQueue<>((pair1, pair2) -> {
            if(pair1.getFirst().start != pair2.getFirst().start){
                return pair1.getFirst().start - pair2.getFirst().start;
            } else {
                return pair1.getFirst().end - pair2.getFirst().end;
            }
        } );
        for (int i = 0; i < schedule.size(); i++) {
            minHeap.add(new Pair<>(schedule.get(i).get(0), new Pair<>(i, 0)));
        }
        Interval lastInterval = null;
        Interval currentInterval = null;
        while (!minHeap.isEmpty()){
           if(lastInterval != null){
               if(currentInterval.start - lastInterval.end > 0){
                   ans.add(new Interval(lastInterval.end, currentInterval.start));
               }
               lastInterval = currentInterval;
           } else {
               lastInterval = currentInterval;
           }
           var first =  minHeap.remove();
            addNext(schedule, first, minHeap);
            currentInterval = first.getFirst();
            while (!minHeap.isEmpty()){
               var current = minHeap.peek();
               if(overlap(currentInterval, current.getFirst())){
                   current = minHeap.remove();
                   addNext(schedule, current, minHeap);
                   currentInterval = merge(currentInterval, current.getFirst());
               }else {
                   break;
               }
           }
        }
        if(lastInterval != null && currentInterval  != null && currentInterval.start - lastInterval.end > 0 ){
            ans.add(new Interval(lastInterval.end, currentInterval.start));
        }

        return ans;
    }

    private static Interval merge(Interval firstInterval, Interval otherInterval) {
        return new Interval(Math.min(firstInterval.start, otherInterval.start), Math.max(firstInterval.end, otherInterval.end));
    }

    private static boolean overlap(Interval firstInterval, Interval otherInterval) {
        return  (firstInterval.start >= otherInterval.start && firstInterval.start < otherInterval.end) || (otherInterval.start >= firstInterval.start && otherInterval.start < firstInterval.end);
    }

    private static void addNext(List<List<Interval>> schedule, Pair<Interval, Pair<Integer, Integer>> first, PriorityQueue<Pair<Interval, Pair<Integer, Integer>>> minHeap) {
        var index = first.getSec();
        Integer col = index.getSec();
        Integer row = index.getFirst();
        if(col +1 < schedule.get(row).size() ){
            minHeap.offer(new Pair<>(schedule.get(row).get(col + 1), new Pair<>(row, col + 1)));
        }
    }

    @ParameterizedTest
    @CsvSource(delimiter = '|', value = {
            "[[[2,3],[7,9]],[[1,4],[6,7]]]|[[4,6]]",
            "[[[3,5],[8,10]], [[4,6],[9,12]], [[5,6],[8,10]]]|[[6,8]]",
            "[[[1,3],[5,6],[9,10]],[[2,4],[7,8]], [[8,11],[12,14]]]|[[4,5],[6,7],[11,12]]"
    })
    void test(String intervalStr, String expectStr){
        var pattern = Pattern.compile("\\[(\\[\\d+,\\d+\\],)+(\\[\\d+,\\d+\\])\\]");
        var matcher = pattern.matcher(intervalStr);
        List<List<Interval>> schedule = matcher.results().map(m -> matcher.group()).map(str -> {
            return getIntervals(str);
        }).toList();
        List<Interval> ex = getIntervals(expectStr);
        List<Interval> actual = employeeFreeTime(schedule);
        Assertions.assertEquals(ex, actual);
    }

    private static List<Interval> getIntervals(String str) {
        var pattern1 = Pattern.compile("\\[\\d+,\\d+\\]");
        var matcher1 = pattern1.matcher(str);
        return matcher1.results().map(m -> matcher1.group()).map(sInt -> {
            String[] tokens = sInt.replace("]", "").replace("[", "").replace(" ", "").trim().split(",");
            return new Interval(Integer.parseInt(tokens[0]), Integer.parseInt(tokens[1]));
        }).toList();
    }

    @Test
    void test1(){
        String scheduleStr = "[[[66,288],[292,297],[301,302],[305,309],[311,314],[316,321],[325,329],[331,337],[339,342],[344,347],[351,355],[359,363],[367,371],[373,377],[379,385],[387,390],[393,397],[401,402],[405,408],[412,415],[417,425],[427,431],[434,438],[441,445],[448,451],[453,461],[464,470],[472,477],[481,487],[491,492],[496,502],[505,509],[511,514],[516,524],[528,532],[535,541],[544,548],[551,557],[560,562],[566,569],[571,579],[581,589],[591,598],[600,606],[609,613],[617,622],[624,630],[632,638],[642,647],[651,654]],[[65,748],[751,755],[758,765],[767,770],[772,779],[781,785],[788,794],[796,804],[808,813],[817,821],[823,831],[833,838],[840,847],[850,853],[855,858],[861,864],[867,869],[872,874],[878,883],[885,890],[892,899],[901,906],[910,914],[917,924],[928,933],[937,939],[942,947],[951,954],[958,963],[966,970],[973,978],[982,984],[986,989],[992,998],[1001,1004],[1006,1014],[1017,1023],[1025,1030],[1032,1038],[1042,1044],[1048,1052],[1055,1060],[1063,1066],[1069,1074],[1076,1083],[1085,1090],[1092,1096],[1098,1105],[1107,1115],[1117,1123]],[[285,498],[502,508],[512,518],[520,526],[530,534],[538,542],[544,547],[550,553],[557,561],[564,569],[571,576],[579,586],[590,592],[596,597],[601,607],[611,616],[620,621],[625,631],[633,637],[639,646],[649,651],[653,659],[662,664],[667,674],[677,681],[683,688],[692,698],[702,708],[710,718],[722,724],[726,729],[731,735],[737,745],[747,751],[753,759],[761,767],[769,773],[777,778],[780,785],[789,792],[795,797],[800,807],[810,814],[817,820],[824,825],[829,831],[834,841],[844,847],[849,853],[855,859]],[[229,900],[903,907],[909,914],[917,919],[922,926],[929,933],[936,943],[945,952],[955,961],[963,966],[969,974],[978,980],[982,990],[994,995],[998,1002],[1005,1007],[1010,1016],[1019,1025],[1027,1035],[1037,1045],[1049,1051],[1054,1061],[1065,1070],[1073,1079],[1082,1086],[1090,1091],[1094,1100],[1104,1106],[1109,1114],[1117,1124],[1127,1134],[1136,1140],[1143,1145],[1147,1155],[1159,1164],[1167,1174],[1177,1179],[1181,1187],[1189,1192],[1195,1202],[1204,1207],[1210,1217],[1221,1226],[1230,1232],[1236,1238],[1241,1244],[1246,1249],[1251,1258],[1262,1266],[1268,1274]],[[864,943],[947,949],[952,955],[957,960],[963,965],[967,974],[978,980],[983,987],[991,997],[999,1005],[1007,1012],[1016,1019],[1021,1027],[1030,1033],[1035,1038],[1042,1045],[1048,1053],[1057,1060],[1064,1070],[1073,1080],[1083,1088],[1091,1097],[1099,1104],[1107,1109],[1111,1116],[1119,1126],[1130,1135],[1139,1140],[1144,1147],[1151,1156],[1159,1165],[1167,1171],[1173,1176],[1179,1181],[1185,1191],[1195,1199],[1202,1209],[1211,1214],[1216,1219],[1222,1228],[1232,1238],[1241,1248],[1251,1253],[1256,1259],[1263,1269],[1271,1275],[1279,1280],[1282,1288],[1292,1296],[1298,1304]],[[27,59],[62,66],[68,71],[73,77],[81,84],[86,94],[97,104],[107,114],[117,123],[127,133],[135,139],[142,147],[150,155],[159,160],[163,166],[170,174],[176,180],[184,188],[191,197],[199,205],[209,215],[217,220],[222,225],[227,235],[238,241],[243,247],[249,254],[257,264],[268,273],[277,278],[282,286],[289,294],[296,301],[304,310],[312,318],[320,325],[329,330],[332,335],[337,341],[343,346],[350,353],[356,358],[362,365],[368,372],[376,380],[384,388],[392,398],[402,403],[406,411],[415,416]],[[151,799],[802,809],[812,818],[822,826],[830,836],[839,845],[848,852],[854,861],[863,866],[870,876],[879,885],[887,895],[898,905],[909,915],[918,921],[924,930],[932,936],[939,944],[947,950],[954,955],[958,961],[964,967],[969,975],[979,982],[985,992],[995,997],[999,1005],[1008,1012],[1015,1022],[1024,1027],[1030,1033],[1037,1039],[1041,1046],[1050,1053],[1055,1063],[1066,1070],[1073,1075],[1077,1080],[1083,1086],[1090,1094],[1097,1100],[1104,1106],[1109,1111],[1115,1116],[1120,1123],[1127,1132],[1134,1139],[1143,1144],[1146,1152],[1156,1157]],[[270,859],[863,865],[869,870],[874,879],[881,889],[892,898],[900,906],[909,911],[914,920],[923,927],[930,937],[940,944],[947,950],[954,959],[962,968],[972,975],[977,980],[984,989],[992,996],[999,1001],[1003,1010],[1014,1019],[1022,1024],[1028,1032],[1034,1040],[1044,1045],[1049,1052],[1056,1057],[1059,1063],[1066,1069],[1071,1075],[1079,1080],[1082,1086],[1088,1092],[1096,1097],[1099,1107],[1109,1114],[1116,1124],[1127,1130],[1133,1140],[1144,1150],[1153,1160],[1162,1168],[1171,1178],[1182,1185],[1188,1194],[1196,1204],[1207,1209],[1213,1218],[1222,1226]],[[91,192],[195,200],[203,206],[208,212],[216,221],[224,226],[230,232],[235,237],[239,247],[251,252],[255,257],[261,265],[267,273],[276,281],[285,291],[294,301],[305,309],[313,318],[321,323],[326,331],[334,336],[338,346],[348,354],[357,363],[365,371],[373,379],[382,385],[389,390],[394,396],[400,401],[405,410],[414,420],[422,430],[434,438],[442,443],[447,453],[455,463],[467,472],[474,478],[482,483],[487,491],[493,497],[500,504],[506,511],[513,516],[519,525],[528,533],[536,540],[544,545],[547,554]],[[169,438],[442,448],[451,458],[462,463],[465,468],[472,477],[481,484],[487,494],[496,502],[505,508],[510,518],[520,523],[526,530],[533,535],[537,541],[545,546],[549,553],[557,559],[561,565],[569,572],[576,579],[581,585],[587,592],[595,599],[601,609],[613,619],[623,629],[632,634],[636,644],[647,654],[657,660],[664,667],[669,672],[674,679],[682,688],[691,698],[700,707],[710,715],[719,720],[722,729],[732,735],[737,742],[745,747],[749,756],[758,764],[766,769],[772,779],[782,786],[788,791],[793,797]],[[20,78],[82,86],[90,95],[97,103],[107,111],[113,118],[120,126],[129,134],[138,143],[147,151],[153,159],[161,167],[169,176],[179,183],[185,192],[196,202],[206,210],[212,219],[223,227],[231,235],[239,245],[249,255],[257,264],[266,273],[277,282],[286,289],[292,298],[302,307],[309,313],[317,322],[324,329],[332,339],[343,345],[349,355],[357,360],[362,369],[372,379],[381,384],[387,392],[395,402],[406,407],[411,417],[419,423],[426,430],[433,436],[439,441],[445,446],[448,451],[453,461],[463,469]],[[565,654],[656,663],[666,668],[672,675],[677,681],[684,687],[689,697],[700,703],[707,709],[711,716],[718,726],[728,736],[738,744],[747,749],[752,759],[761,764],[767,771],[773,779],[783,786],[788,792],[795,799],[803,805],[807,813],[816,822],[824,831],[833,840],[842,848],[851,858],[861,865],[868,873],[876,879],[882,884],[888,890],[893,896],[899,902],[905,912],[915,920],[923,928],[930,937],[939,946],[948,952],[956,962],[966,968],[972,973],[976,982],[985,988],[990,998],[1001,1008],[1012,1018],[1020,1024]],[[34,422],[424,430],[434,437],[439,446],[450,456],[460,466],[469,475],[478,484],[488,493],[496,498],[502,506],[510,514],[517,524],[528,531],[533,541],[545,548],[550,555],[559,563],[565,573],[577,579],[582,589],[591,596],[599,605],[609,611],[615,616],[619,621],[623,631],[634,640],[642,646],[649,653],[656,661],[663,671],[673,676],[679,683],[686,693],[695,698],[700,703],[705,708],[710,713],[715,723],[727,731],[733,739],[743,746],[748,756],[758,762],[766,771],[773,781],[783,787],[789,793],[795,803]],[[106,389],[392,395],[397,400],[404,408],[410,416],[419,421],[423,427],[430,437],[439,443],[445,453],[457,458],[461,465],[469,471],[474,476],[480,482],[486,492],[495,499],[503,509],[513,517],[521,522],[524,530],[534,537],[540,543],[545,548],[550,556],[558,564],[566,570],[572,580],[582,587],[590,597],[601,602],[604,612],[616,619],[621,627],[629,632],[636,637],[641,645],[649,654],[657,662],[665,668],[672,676],[678,686],[688,695],[699,701],[705,706],[710,716],[719,725],[727,733],[735,739],[741,746]],[[142,562],[565,568],[571,578],[582,587],[590,593],[596,598],[601,606],[610,615],[618,621],[624,631],[633,639],[641,644],[648,649],[653,657],[660,662],[666,671],[675,677],[680,685],[689,692],[694,700],[703,705],[708,713],[716,721],[723,731],[735,738],[741,747],[751,753],[757,763],[766,773],[775,779],[781,787],[790,794],[797,802],[806,812],[815,819],[823,827],[829,834],[836,841],[844,847],[851,853],[857,861],[864,871],[874,881],[883,888],[891,893],[895,903],[905,912],[915,920],[922,929],[933,937]],[[411,568],[571,574],[578,582],[584,587],[590,593],[596,598],[600,603],[605,610],[612,617],[621,627],[630,632],[634,641],[645,649],[651,658],[661,666],[668,676],[680,685],[687,695],[697,702],[706,710],[713,719],[722,728],[731,738],[742,747],[750,754],[756,763],[766,768],[771,774],[776,782],[786,787],[790,793],[795,801],[805,808],[812,814],[816,821],[823,828],[830,833],[837,839],[842,845],[849,853],[857,861],[865,868],[872,874],[877,881],[884,888],[891,894],[896,899],[901,909],[911,915],[917,924]],[[175,748],[750,753],[757,762],[765,767],[771,777],[779,782],[786,792],[794,802],[804,811],[813,821],[825,829],[832,838],[841,846],[850,856],[859,861],[863,866],[868,873],[876,881],[884,887],[891,893],[895,901],[903,909],[911,919],[922,928],[931,934],[938,941],[945,946],[948,956],[960,965],[967,974],[977,984],[987,990],[992,996],[1000,1004],[1007,1010],[1013,1019],[1021,1028],[1031,1036],[1038,1046],[1049,1053],[1056,1061],[1065,1067],[1070,1073],[1075,1079],[1081,1088],[1092,1094],[1096,1101],[1105,1109],[1112,1118],[1121,1125]],[[266,586],[589,595],[599,603],[606,612],[615,622],[626,628],[630,636],[638,644],[648,654],[658,660],[663,669],[672,679],[683,685],[688,691],[694,696],[700,706],[708,716],[720,726],[729,732],[734,740],[743,747],[751,756],[759,765],[767,775],[779,781],[783,786],[789,793],[797,798],[802,805],[807,811],[814,821],[823,827],[831,832],[834,837],[839,847],[850,853],[857,862],[865,867],[870,876],[880,886],[888,895],[898,903],[905,908],[910,916],[919,925],[928,933],[936,941],[945,951],[955,959],[963,967]],[[657,821],[824,827],[829,835],[837,840],[843,845],[847,854],[857,864],[867,873],[877,883],[885,891],[893,898],[901,903],[906,911],[914,918],[922,927],[929,934],[936,941],[945,948],[950,958],[962,964],[968,970],[973,978],[982,987],[991,996],[999,1004],[1007,1014],[1018,1023],[1026,1032],[1036,1037],[1039,1046],[1049,1056],[1060,1064],[1067,1071],[1074,1077],[1081,1082],[1084,1088],[1090,1095],[1099,1101],[1103,1109],[1113,1114],[1117,1123],[1125,1133],[1137,1141],[1143,1151],[1155,1156],[1158,1161],[1164,1167],[1169,1173],[1176,1178],[1180,1188]],[[172,304],[308,314],[318,323],[326,328],[330,336],[340,342],[344,350],[353,358],[362,365],[367,371],[373,377],[380,385],[387,390],[394,397],[399,405],[409,413],[416,419],[423,428],[430,438],[441,446],[450,452],[456,459],[462,468],[471,478],[480,485],[489,492],[494,501],[504,511],[515,517],[521,526],[528,535],[538,545],[547,551],[554,561],[563,568],[570,575],[577,580],[583,589],[591,595],[599,601],[604,609],[611,618],[620,626],[630,635],[638,645],[647,653],[656,663],[666,669],[673,674],[677,684]],[[674,974],[976,983],[986,991],[995,1000],[1003,1009],[1011,1018],[1022,1027],[1031,1033],[1036,1038],[1040,1043],[1046,1051],[1055,1056],[1058,1066],[1068,1073],[1075,1080],[1082,1089],[1092,1098],[1102,1108],[1112,1118],[1121,1127],[1129,1132],[1134,1142],[1145,1152],[1156,1157],[1160,1162],[1166,1171],[1173,1181],[1185,1189],[1191,1196],[1199,1205],[1207,1214],[1216,1220],[1222,1225],[1228,1233],[1235,1239],[1242,1245],[1248,1253],[1256,1260],[1263,1270],[1274,1279],[1283,1285],[1289,1293],[1297,1298],[1301,1303],[1307,1311],[1313,1318],[1320,1325],[1327,1333],[1336,1339],[1343,1346]],[[315,707],[710,713],[716,723],[726,728],[730,734],[736,742],[744,747],[751,754],[757,762],[764,772],[775,779],[781,788],[790,797],[799,805],[807,812],[816,817],[820,824],[826,834],[836,844],[846,852],[856,860],[862,866],[870,876],[879,882],[884,891],[895,897],[900,904],[906,914],[918,923],[926,928],[930,938],[940,944],[947,954],[958,960],[964,967],[970,977],[980,985],[987,990],[992,998],[1001,1005],[1007,1010],[1012,1019],[1023,1025],[1029,1033],[1036,1040],[1042,1045],[1049,1055],[1057,1064],[1066,1069],[1071,1074]],[[3,4],[6,9],[12,16],[20,24],[28,29],[32,34],[36,40],[42,50],[52,57],[60,62],[66,69],[72,76],[80,84],[87,93],[95,99],[102,105],[107,110],[112,115],[118,122],[125,127],[131,132],[135,139],[142,147],[150,157],[160,164],[166,171],[174,177],[181,185],[188,192],[196,199],[202,206],[208,211],[215,220],[222,228],[230,237],[240,242],[244,252],[255,262],[265,269],[271,277],[280,286],[290,296],[300,306],[308,315],[319,325],[327,334],[337,342],[344,351],[355,356],[359,362]],[[298,584],[588,594],[597,601],[603,609],[611,619],[621,627],[631,636],[639,645],[648,655],[657,662],[664,670],[673,676],[679,686],[690,692],[696,698],[701,705],[708,715],[719,722],[726,732],[735,737],[739,745],[747,755],[758,761],[765,766],[769,776],[778,781],[784,789],[792,798],[802,807],[811,813],[815,820],[824,830],[833,838],[842,848],[852,858],[862,865],[867,875],[879,884],[888,894],[896,901],[905,911],[915,916],[920,926],[928,931],[934,937],[940,945],[949,954],[958,964],[966,972],[974,981]],[[58,184],[186,194],[197,200],[204,208],[211,214],[217,220],[224,230],[232,235],[237,241],[243,246],[250,251],[254,260],[262,265],[269,273],[276,280],[283,285],[288,295],[298,305],[309,310],[314,316],[320,323],[325,330],[332,337],[341,347],[349,356],[358,364],[368,371],[373,376],[380,386],[388,392],[394,397],[399,403],[405,408],[411,413],[415,422],[424,428],[432,435],[437,443],[446,452],[454,458],[461,468],[472,474],[476,484],[486,491],[495,500],[502,505],[509,512],[515,519],[523,526],[528,535]],[[199,678],[682,685],[688,695],[698,703],[706,709],[713,719],[722,725],[729,734],[736,740],[744,747],[749,752],[756,759],[763,764],[768,771],[775,778],[781,785],[789,794],[798,799],[801,807],[809,812],[814,822],[826,829],[831,834],[837,839],[841,846],[850,854],[857,863],[867,872],[874,877],[881,886],[890,892],[896,898],[900,905],[907,913],[915,922],[926,930],[934,935],[939,940],[943,949],[953,954],[956,964],[966,969],[971,977],[979,986],[988,992],[994,1001],[1004,1010],[1012,1019],[1021,1026],[1029,1035]],[[77,150],[152,156],[159,163],[166,170],[172,178],[182,188],[192,194],[198,199],[201,205],[208,210],[212,216],[220,222],[225,232],[236,238],[242,246],[249,251],[254,256],[259,261],[264,267],[270,276],[279,285],[289,291],[294,301],[304,310],[312,317],[321,325],[327,331],[335,339],[343,349],[353,356],[359,364],[366,371],[375,379],[381,385],[387,394],[396,403],[407,411],[414,421],[425,428],[430,434],[436,442],[446,449],[451,458],[460,467],[469,472],[475,478],[482,483],[485,489],[491,497],[501,504]],[[2,773],[775,783],[786,791],[794,801],[804,806],[810,811],[814,821],[825,826],[829,831],[833,837],[839,845],[848,853],[856,863],[865,872],[876,880],[884,888],[891,897],[899,902],[904,910],[913,918],[922,923],[926,930],[934,935],[939,942],[944,951],[954,957],[959,963],[966,970],[972,977],[980,983],[987,988],[992,995],[999,1005],[1009,1011],[1013,1017],[1020,1024],[1026,1034],[1036,1039],[1042,1044],[1048,1050],[1052,1060],[1064,1065],[1068,1075],[1077,1084],[1086,1093],[1097,1103],[1106,1108],[1110,1114],[1118,1120],[1124,1126]],[[24,31],[33,40],[43,45],[47,54],[56,64],[67,73],[77,81],[84,91],[94,99],[103,105],[108,113],[116,121],[125,129],[133,135],[138,142],[145,152],[154,162],[165,171],[175,178],[182,187],[190,197],[201,207],[209,217],[219,226],[229,236],[240,241],[245,248],[252,254],[258,259],[263,268],[270,276],[279,283],[286,290],[294,295],[299,305],[307,310],[314,319],[321,329],[332,339],[342,349],[353,355],[357,361],[365,369],[372,377],[381,387],[390,392],[396,400],[404,407],[411,412],[416,418]],[[78,890],[893,898],[900,908],[912,916],[919,922],[924,930],[934,936],[939,944],[947,950],[954,958],[961,965],[969,975],[977,984],[987,993],[996,1000],[1004,1005],[1008,1013],[1015,1019],[1022,1024],[1028,1033],[1036,1040],[1044,1047],[1049,1054],[1056,1064],[1068,1069],[1073,1074],[1076,1081],[1084,1088],[1092,1098],[1102,1105],[1108,1113],[1117,1120],[1124,1130],[1134,1135],[1139,1145],[1148,1154],[1157,1162],[1165,1167],[1170,1175],[1177,1180],[1184,1185],[1187,1190],[1194,1195],[1197,1202],[1205,1212],[1214,1220],[1222,1228],[1230,1238],[1241,1243],[1246,1252]],[[17,559],[561,565],[568,574],[577,579],[583,584],[586,591],[595,600],[603,606],[610,616],[619,623],[627,628],[630,638],[640,645],[647,652],[654,661],[664,667],[671,677],[679,685],[689,694],[698,701],[704,709],[712,716],[719,721],[723,729],[732,739],[743,746],[749,754],[757,763],[767,773],[776,783],[786,792],[796,800],[804,806],[808,812],[814,817],[819,827],[831,835],[837,845],[847,852],[855,859],[861,864],[866,872],[876,881],[884,886],[890,892],[896,898],[902,904],[906,912],[915,920],[922,925]],[[380,978],[982,985],[989,991],[995,999],[1001,1004],[1007,1013],[1017,1023],[1026,1028],[1030,1038],[1040,1045],[1048,1055],[1057,1063],[1066,1072],[1074,1082],[1086,1091],[1095,1097],[1100,1102],[1105,1110],[1113,1120],[1122,1125],[1128,1135],[1138,1143],[1147,1152],[1156,1161],[1165,1169],[1171,1174],[1177,1180],[1183,1185],[1189,1195],[1197,1201],[1203,1207],[1209,1212],[1214,1218],[1221,1227],[1231,1236],[1240,1243],[1245,1249],[1251,1255],[1258,1263],[1266,1268],[1272,1278],[1282,1288],[1292,1297],[1301,1302],[1306,1307],[1311,1312],[1316,1318],[1322,1323],[1327,1331],[1335,1338]],[[146,180],[184,189],[191,197],[200,205],[207,210],[212,219],[222,224],[226,233],[236,239],[243,249],[253,254],[258,263],[266,270],[272,276],[279,283],[287,293],[295,302],[305,308],[312,313],[315,320],[322,327],[331,332],[336,340],[342,348],[351,358],[362,364],[366,372],[374,377],[379,387],[391,392],[394,401],[403,410],[414,419],[423,426],[429,431],[434,437],[439,444],[446,452],[456,460],[464,469],[471,476],[479,485],[489,490],[494,496],[500,505],[507,512],[515,521],[524,529],[532,537],[541,543]],[[89,92],[94,97],[100,105],[107,114],[116,120],[122,125],[127,131],[134,137],[141,143],[147,150],[154,158],[161,165],[169,173],[176,179],[183,184],[188,190],[193,200],[202,208],[212,216],[218,224],[226,229],[232,238],[242,247],[249,254],[257,263],[266,270],[272,275],[279,281],[284,288],[290,296],[300,302],[305,310],[314,315],[317,321],[325,327],[329,336],[339,343],[345,351],[354,360],[364,366],[370,372],[375,382],[385,391],[395,398],[402,407],[409,414],[416,419],[422,427],[431,432],[436,439]],[[824,975],[977,983],[986,991],[993,996],[998,1002],[1006,1011],[1014,1017],[1019,1022],[1025,1031],[1034,1041],[1045,1049],[1051,1055],[1057,1063],[1065,1072],[1075,1082],[1085,1087],[1089,1092],[1094,1100],[1104,1107],[1109,1114],[1118,1119],[1123,1126],[1129,1131],[1133,1138],[1140,1146],[1149,1155],[1159,1163],[1167,1173],[1177,1179],[1183,1185],[1189,1191],[1194,1198],[1201,1207],[1209,1213],[1216,1222],[1224,1229],[1233,1234],[1236,1243],[1247,1253],[1256,1258],[1262,1266],[1269,1274],[1277,1284],[1288,1290],[1292,1295],[1298,1302],[1304,1308],[1310,1318],[1320,1328],[1332,1337]],[[94,265],[269,270],[274,276],[280,284],[288,292],[296,302],[305,310],[313,318],[321,324],[328,331],[335,340],[342,345],[349,351],[353,358],[360,364],[366,369],[371,379],[381,387],[390,392],[394,399],[403,409],[411,416],[419,425],[428,434],[437,443],[446,450],[453,456],[460,464],[468,473],[475,483],[485,491],[494,497],[500,507],[510,516],[518,522],[525,530],[534,540],[544,547],[551,554],[558,561],[564,569],[572,578],[581,583],[586,589],[591,594],[598,603],[605,610],[612,616],[619,623],[627,629]],[[342,574],[576,580],[582,590],[594,596],[599,602],[605,610],[614,619],[622,625],[629,633],[635,643],[646,649],[651,659],[663,665],[669,675],[679,684],[688,689],[693,697],[700,704],[706,714],[717,719],[723,724],[726,734],[737,740],[742,745],[747,751],[754,761],[764,769],[771,776],[779,781],[783,790],[794,799],[801,805],[807,810],[813,819],[822,825],[829,833],[836,838],[842,847],[849,853],[857,858],[861,865],[867,870],[873,875],[879,881],[884,889],[892,898],[902,908],[912,917],[920,926],[928,931]],[[451,942],[946,951],[953,960],[963,968],[970,977],[979,985],[987,994],[996,1002],[1006,1007],[1009,1012],[1016,1021],[1024,1030],[1034,1036],[1040,1045],[1049,1053],[1056,1063],[1067,1071],[1074,1078],[1081,1083],[1086,1092],[1095,1101],[1104,1107],[1111,1113],[1115,1123],[1126,1130],[1134,1136],[1138,1143],[1145,1151],[1153,1157],[1161,1166],[1169,1171],[1173,1178],[1180,1187],[1191,1197],[1201,1207],[1210,1215],[1217,1225],[1227,1231],[1235,1239],[1242,1249],[1252,1258],[1261,1266],[1269,1271],[1274,1280],[1284,1290],[1293,1295],[1297,1303],[1307,1310],[1312,1319],[1323,1329]],[[306,691],[694,698],[701,706],[708,711],[714,717],[720,724],[727,732],[734,737],[739,742],[745,751],[754,761],[765,767],[769,774],[777,784],[786,789],[792,796],[799,801],[804,806],[810,813],[815,823],[826,832],[835,840],[842,845],[849,854],[857,861],[864,869],[873,879],[881,888],[890,893],[895,901],[904,906],[909,912],[915,922],[924,931],[935,936],[940,946],[950,955],[959,961],[963,966],[968,974],[977,983],[985,990],[994,998],[1002,1005],[1007,1014],[1018,1020],[1023,1029],[1031,1037],[1040,1044],[1046,1053]],[[364,429],[433,438],[441,443],[445,450],[454,460],[463,465],[469,472],[475,482],[484,492],[494,500],[503,510],[513,515],[519,525],[529,532],[535,540],[544,545],[549,554],[557,562],[564,571],[575,576],[579,584],[588,591],[595,600],[603,608],[612,615],[619,621],[624,629],[633,639],[641,647],[649,656],[658,662],[664,668],[671,676],[678,682],[686,690],[693,698],[701,703],[705,711],[714,720],[724,730],[732,735],[739,742],[745,748],[751,757],[760,767],[770,773],[775,778],[781,783],[786,791],[794,798]],[[37,44],[48,51],[55,59],[61,69],[71,74],[77,83],[87,89],[92,99],[102,107],[111,116],[118,126],[128,132],[136,139],[141,149],[151,155],[157,161],[163,167],[170,176],[180,186],[189,193],[196,200],[203,206],[210,212],[216,220],[223,225],[228,234],[236,242],[246,248],[252,253],[255,260],[264,265],[267,271],[275,279],[283,289],[291,294],[297,303],[307,312],[316,318],[322,327],[330,334],[336,341],[344,347],[350,353],[357,358],[362,365],[367,374],[378,382],[384,389],[391,397],[400,403]],[[148,228],[230,235],[237,241],[243,247],[251,256],[260,263],[267,270],[274,280],[282,285],[288,290],[293,295],[297,301],[304,311],[313,316],[318,322],[325,327],[331,333],[335,342],[346,352],[356,359],[361,367],[369,372],[374,382],[384,390],[394,399],[401,404],[406,411],[413,418],[421,423],[426,432],[435,438],[440,446],[450,453],[455,460],[462,468],[471,474],[478,480],[483,489],[491,495],[498,505],[507,512],[514,519],[521,525],[528,534],[536,540],[542,547],[551,557],[560,564],[567,570],[574,578]],[[713,774],[776,783],[787,793],[797,802],[804,809],[812,817],[820,827],[831,834],[837,844],[846,854],[858,861],[863,866],[869,875],[878,884],[888,894],[898,902],[906,909],[913,918],[921,925],[929,931],[933,937],[940,945],[948,954],[957,963],[967,968],[972,973],[976,981],[984,988],[990,996],[999,1001],[1003,1007],[1010,1015],[1018,1023],[1027,1033],[1037,1039],[1041,1047],[1049,1057],[1061,1067],[1069,1072],[1074,1077],[1081,1083],[1085,1090],[1092,1099],[1103,1106],[1109,1112],[1114,1122],[1124,1131],[1135,1138],[1141,1147],[1149,1157]],[[71,86],[90,96],[99,104],[107,113],[117,122],[124,130],[132,135],[139,142],[145,148],[151,156],[160,166],[168,174],[178,181],[184,191],[193,200],[203,210],[214,219],[223,226],[229,234],[238,243],[247,250],[253,257],[260,266],[269,276],[278,285],[287,292],[294,299],[303,304],[308,310],[314,320],[322,327],[331,332],[335,341],[345,350],[353,356],[359,361],[364,370],[374,380],[383,389],[392,397],[401,406],[410,414],[417,421],[424,430],[433,439],[442,444],[447,451],[454,458],[462,466],[468,473]],[[735,871],[875,881],[884,889],[891,896],[900,902],[906,908],[912,916],[920,925],[927,935],[938,945],[948,955],[957,963],[965,968],[971,977],[981,982],[984,992],[994,1001],[1004,1010],[1014,1018],[1022,1025],[1027,1035],[1037,1044],[1046,1054],[1057,1059],[1062,1067],[1069,1077],[1079,1087],[1089,1092],[1096,1098],[1100,1108],[1110,1114],[1117,1122],[1126,1129],[1131,1134],[1136,1141],[1143,1151],[1155,1157],[1159,1165],[1167,1173],[1176,1178],[1182,1188],[1191,1197],[1201,1206],[1210,1211],[1214,1221],[1223,1230],[1232,1236],[1238,1242],[1244,1249],[1252,1256]],[[69,816],[820,821],[824,830],[834,838],[842,845],[849,850],[853,858],[862,866],[869,873],[875,882],[885,888],[892,898],[902,908],[910,914],[918,921],[925,930],[932,936],[938,941],[945,949],[951,958],[961,965],[968,971],[974,976],[978,981],[984,987],[991,997],[1001,1003],[1006,1012],[1015,1022],[1025,1032],[1034,1037],[1041,1046],[1050,1051],[1053,1056],[1058,1064],[1068,1072],[1075,1079],[1083,1088],[1092,1093],[1096,1099],[1101,1106],[1110,1112],[1114,1121],[1123,1130],[1134,1135],[1139,1141],[1144,1149],[1153,1158],[1161,1165],[1168,1172]],[[151,154],[156,164],[167,173],[175,179],[181,186],[190,192],[194,197],[201,207],[210,216],[219,223],[226,229],[233,234],[238,239],[242,244],[246,254],[258,259],[261,265],[268,273],[275,279],[282,284],[286,294],[296,302],[304,311],[314,316],[320,323],[327,328],[331,333],[336,339],[342,348],[350,353],[355,362],[366,367],[371,375],[378,383],[386,390],[394,398],[401,403],[407,408],[410,415],[417,423],[427,433],[435,438],[440,448],[450,457],[460,467],[470,477],[479,486],[490,491],[493,499],[501,505]],[[465,964],[967,973],[976,979],[983,986],[990,993],[997,1003],[1006,1009],[1013,1018],[1020,1028],[1031,1037],[1039,1044],[1046,1054],[1056,1064],[1067,1074],[1077,1082],[1086,1090],[1094,1096],[1100,1102],[1105,1111],[1113,1119],[1121,1124],[1127,1133],[1136,1143],[1147,1151],[1153,1161],[1163,1169],[1173,1177],[1181,1184],[1186,1191],[1194,1200],[1203,1205],[1208,1214],[1217,1220],[1223,1228],[1232,1234],[1237,1244],[1248,1250],[1252,1257],[1260,1266],[1269,1274],[1276,1281],[1284,1290],[1293,1296],[1298,1303],[1305,1308],[1310,1316],[1320,1321],[1324,1329],[1332,1339],[1343,1348]],[[229,975],[979,980],[982,987],[989,993],[995,999],[1002,1009],[1012,1015],[1017,1020],[1024,1028],[1032,1034],[1036,1039],[1041,1046],[1050,1051],[1055,1056],[1059,1064],[1067,1070],[1073,1077],[1080,1087],[1090,1094],[1097,1102],[1106,1107],[1110,1113],[1117,1123],[1127,1129],[1133,1137],[1140,1143],[1147,1153],[1156,1163],[1166,1171],[1174,1178],[1182,1187],[1190,1196],[1200,1206],[1209,1215],[1217,1222],[1225,1227],[1230,1236],[1239,1244],[1248,1251],[1255,1257],[1259,1267],[1270,1272],[1276,1280],[1284,1289],[1291,1294],[1298,1304],[1307,1312],[1315,1320],[1324,1325],[1329,1333]],[[127,312],[315,319],[321,324],[328,332],[336,342],[345,351],[353,361],[363,371],[374,379],[381,385],[388,394],[397,399],[401,405],[407,410],[413,419],[421,428],[430,434],[436,443],[446,449],[453,459],[461,468],[472,476],[479,482],[486,491],[493,500],[503,506],[509,514],[516,520],[522,528],[531,533],[535,539],[541,544],[547,554],[558,561],[565,570],[572,580],[582,586],[588,596],[600,604],[606,609],[611,617],[621,622],[625,631],[633,638],[640,646],[650,651],[653,658],[661,665],[668,670],[673,679]]]";
        var pattern = Pattern.compile("\\[(\\[\\d+,\\d+\\],)+(\\[\\d+,\\d+\\])\\]");
        var matcher = pattern.matcher(scheduleStr);
        List<List<Interval>> schedule = matcher.results().map(m -> matcher.group()).map(str -> {
            return getIntervals(str);
        }).toList();
        List<Interval> actual = employeeFreeTime(schedule);
        System.out.println(actual);;

    }
}
